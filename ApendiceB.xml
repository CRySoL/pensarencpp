<?xml  version="1.0" encoding="iso-8859-1"?>
<!-- -*- sgml -*- -->
<!--
  Editor:              Emacs 21/PSGML
  Traducción original: David Villa Alises
  Formateado DocBook:  David Villa Alises
  1ª Revisión:
  2ª Revisión
-->

<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
                 "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<appendix
  xmlns:xi="http://www.w3.org/2001/XInclude"
  id="ApendiceB">
  
  <!-- Programming Guidelines -->
  <title>Directrices de Programación</title>

  <highlights>
    <!--
    This appendix is a collection of suggestions for C++
    programming. They've been assembled over the course of my teaching
    and programming experience and
    -->
    <para>
      Este apéndice es una colección de sugerencias para programación
      con C++. Se han reunido a lo largo de mi experiencia en
      como docente y programador y
    </para>
  </highlights>

  <!--
  also from the insights of friends including Dan Saks (co-author with
  Tom Plum of C++ Programming Guidelines, Plum Hall, 1991), Scott Meyers
  (author of Effective C++, 2nd edition, Addison-Wesley, 1998), and Rob
  Murray (author of C++ Strategies & Tactics, Addison-Wesley,
  1993). Also, many of the tips are summarized from the pages of
  Thinking in C++.
  -->

  <para>
    también de las FIXME:aportaciones de amigos incluyendo a Dan Saks
    (co-autor junto a Tom Plum de <citetitle>C++ Programming
      Guidelines</citetitle>, Plum Hall, 1991), Scott Meyers (autor de
    <citetitle>Effective C++</citetitle>, 2ª edición, Addison-Wesley,
    1998), and Rob Murray (autor de <citetitle>C++ Strategies &amp;
    Tactics</citetitle>, Addison-Wesley, 1993). También, muchos de los
    consejos están resumidos a partir del contenido de
    <citetitle>Thinking in C++</citetitle>.
  </para>

  <orderedlist>
    <listitem>
      <!--
      First make it work, then make it fast. This is true even if you
      are certain that a piece of code is really important and that it
      will be a principal bottleneck in your system. Don't do it. Get
      the system going first with as simple a design as possible. Then
      if it isn't going fast enough, profile it. You'll almost always
      discover that "your" bottleneck isn't the problem. Save your
      time for the really important stuff.
      -->

      <para>
	Primero haga que funcione, después hágalo rápido. Esto es cierto
	incluso si se está seguro de que una trozo de código es
	realmente importante y se sabe que será un cuello de botella es
	el sistema. No lo haga. Primero, consiga que el sistema tenga un
	diseño lo más simple posible. Entonces, si no es suficientemente
	rápido, optimícelo. Casi siempre descubrirá que
	<quote>su</quote> cuello de botella no es el problema. Guarde su
	tiempo para lo verdaderamente importante.
      </para>
    </listitem>
  </orderedlist>

</appendix>
