<?xml  version="1.0" encoding="iso-8859-1"?>
<!-- -*- sgml -*- -->
<!--
  Editor:               Emacs 21/PSGML
  Traducción original: 
  Formateado DocBook:  
  1ª Revisión:
  2ª Revisión
-->

<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
                 "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd">

<chapter 
  xmlns:xi="http://www.w3.org/2001/XInclude"
  id="C3">

  <title>El C en C++</title>

  <para>
    [PAG:121] 
    Dado que C++ está basado en C, debe estar familiarizado con la
    sintaxsis de C programar adecuadamente en C++, del mismo modo
    que debe una fluidez razonable en algebra para poder abordar el
    cálculo.
  </para>

  <para>
    [PAG:122]
    Si nunca antes ha visto C, este capítulo le dará una buena base
    sobre el estilo de C usado en C++. Si está familiarizado con el
    estilo de C descrito en la primera edición de Kernighan &amp;
    Ritchie (también llamado K&amp;R) encontrará algunas
    características nuevas o diferentes tanto en C++ como en el
    estándar C. Si está familiarizado con el estándar C debería
    echar un vistazo al capítulo en busca de las carasterísticas
    particulares de C++. Note que hay algunas características
    fundamentales de C++ que se introducen aquí, que son ideas
    básicas parecidas a características de C o a menudo
    modificaciones en el modo en que C hace las cosas. Las
    características más sofisticadas de C++ serán introducidas en
    capítulos posteriores
  </para> 
  
  <para>
    Este capítulo se trata bastante rápido construcciones[?] de C e
    introduce algunas construcciones básicas de C++, suponiendo que
    tiene alguna experiencia programando en otro lenguaje. En el
    CD-ROM que acompaña a este libro hay una introducción más
    suave[FIXME:gentle] a C, titulada <emphasis>Thinking iC:
      Foundations for Java &amp; C++</emphasis> por Chuck Alison
    (publicada por MidView, Inc. y disponible también en <ulink
      url="www.MindView.net"></ulink>). Se trata de un seminario en
    CD-ROM que persigue el objetivo de guiarle cuidadosamente a
    través de los fundamentos del lenguaje C. Se concentra en el
    conocimiento necesario que le permita pasarse a C++ o a Java en
    lugar de intentar convertirle en un experto en todos los oscuros
    recovecos de C (una de las razones para usar un lenguaje de alto
    nivel como C++ o Java es precisamente evitar muchos de estos
    recovecos). También contiene ejercicios y soluciones
    guiadas. Tenga presente que este capítulo va después del CD
    <emphasis>Thinking in C</emphasis>, el CD no reemplaza a este
    capítulo, sino que debería tomarse como una preparación para
    este capítulo y para el libro.
  </para>
  
  <sect1>
    <title>Creación de funciones</title>
    
    <para>
      En el antiguo C (previo al estándar), se podía invocar una
      función con cualquier número y tipo de argumentos sin que el
      compilador se quejase.
      [PAG:123]
      
    </para>
 
    <sect2>
      <title>Funciones que retornan valores</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Uso de funciones de librerías C</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Creación de librerías propias</title>
      <para>
      </para>
    </sect2>
  </sect1>

  <sect1>
    <title>Control de la ejecuión</title>
    <para>
    </para>
  
    <sect2>
      <title>Verdadero y falso</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>if-else</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>while</title>
      <para>
      </para>
    </sect2>
      
    <sect2>
      <title>do-while</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>for</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Las sentencias <literal>break</literal> y
      <literal>continue</literal></title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>switch</title>
      <para>
      </para>
    </sect2> 

    <sect2>
      <title>Uso y maluso de <literal>goto</literal></title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Recursividad</title>
      <para>
      </para>
    </sect2>   
  </sect1>

  <sect1>
    <title>Introducción a los operadores</title>
    <para>
    </para>

    <sect2>
      <title>Precedencia</title>
      <para>
      </para>
    </sect2>
    
    <sect2>
      <title>Auto incremento y decremento</title>
      <para>
      </para>
    </sect2>
  </sect1>    
    

  <sect1>
    <title>Introducción a los tipos de datos</title>
    <para>
    </para>

    <sect2>
      <title>Tipos empotrados básicos</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>booleano, true y false</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Especificadores</title>
      <para>
      </para>
    </sect2>
      
    <sect2>
      <title>Introducción a los punteros</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>FIXME: Modifying the outside object</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Introducción a las referencias de C++</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Punteros y referencias como modificadores</title>
      <para>
      </para>
    </sect2>
  </sect1>

  <sect1>
    <title>Alcance</title>
    <para>
    </para>

    <sect2>
      <title>Definición de variables 'al vuelo'</title>
      <para>
      </para>
    </sect2>
  </sect1>

  
  <sect1>
    <title>Especificación del almacenamiento</title>
    <!-- Specifying storage allocation -->
    <para>
    </para>

    <sect2>
      <title>Variables globales</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Variables locales</title>
      <para>
      </para>
      <sect3>
	<title>Varibles-registro</title>
	<para>
	</para>
      </sect3>
    </sect2>

    <sect2>
      <title><literal>static</literal></title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title><literal>extern</literal></title>
      <para>
      </para>
      <sect3>
	<title>Enlace</title>
	<para>
	</para>
      </sect3>
    </sect2>

    <sect2>
      <title>Constantes</title>
      <para>
      </para>
      <sect3>
	<title>Valores constantes</title>
	<para>
	</para>
      </sect3>
    </sect2>

    <sect2>
      <title><literal>volatile</literal></title>
      <para>
      </para>
    </sect2>
  </sect1>

  <sect1>
    <title>Los operadores y su uso</title>
    <para>
    </para>

    <sect2>
      <title>Asignación</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Operadores matemáticos</title>
      <para>
      </para>
      <sect3>
	<title>Introducción a las macros del preprocesador</title>
	<para>
	</para>
      </sect3>
    </sect2>

    <sect2>
      <title>Operadores relacionales</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Operadores lógicos</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Operadores para bits</title>
      <!-- Bitwise operators -->
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Operadores de desplazamiento</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Operadores unarios</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>El operador ternario</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>El operador ternario</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>El operador ternario</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>El operador coma</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Trampas habituales cuando se usan los operadores</title>
      <!--  Common pitfalls when using operators -->
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Operadores del molde (casting)</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Moldeado explícito en C++</title>
      <para>
      </para>

      <sect3>
	<title>Molde estático</title>
	<para>
	</para>
      </sect3>

      <sect3>
	<title>Molde constante</title>
	<para>
	</para>
      </sect3>

      <sect3>
	<title>FIXME:  reinterpret_cast</title>
	<para>
	</para>
      </sect3>

    </sect2>

    <sect2>
      <title><literal>sizeof</literal> - un operador en si mismo</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>La palabra reservada <literal>keyword</literal></title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Operadores explícitos</title>
      <para>
      </para>
    </sect2>
  </sect1>

  <sect1>
    <title>Creación de tipos compuestos</title>
    <para>
    </para>
    
    <sect2>
      <title>Operadores explícitos</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Creación de alias usando <literal>typedef</literal></title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>
	Combinación de variables por medio de  <literal>struct</literal>
      </title>
      <para>
      </para>
      <sect3>
	<title>Punteros y estructuras</title>
	<para>
	</para>
      </sect3>

    </sect2>

    <sect2>
      <title>Programas más claros gracias a <literal>enum</literal></title>
      <para>
      </para>

      <sect3>
	<title>Comprobación de tipos para las enumeraciones</title>
	<para>
	</para>
      </sect3>
    </sect2>


    <sect2>
      <title>Cómo Ahorrar memoria con <literal>union</literal></title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Arrays</title>
      <para>
      </para>

      <sect3>
	<title>Punteros y arrays</title>
	<para>
	</para>
      </sect3>

      <sect3>
	<title>El formato de punto flotante</title>
	<!-- Exploring floating-point format -->
	<para>
	</para>
      </sect3>

     <sect3>
	<title>Aritmética de punteros</title>
	<para>
	</para>
      </sect3>

    </sect2>
  </sect1>


  <sect1>
    <title>FIXME: Debugging hints</title>
    <para>
    </para>

    <sect2>
      <title>Opciones para depuración</title>
      <para>
      </para>

      <sect3>
	<title>Opciones de depuración para el preprocesador</title>
	<para>
	</para>
      </sect3>

      <sect3>
	<title>Opciones de depuración en tiempo de ejecución</title>
	<para>
	</para>
      </sect3>

    </sect2>

    <sect2>
      <title>Convertir variables y expresiones en cadenas</title>
      <!-- Turning variables and expressions into strings -->
      <para>
      </para>
    </sect2>

    <sect2>
      <title>La macro C assert()</title>
      <para>
      </para>
    </sect2>
  </sect1>

  <sect1>
    <title>Direcciones de función</title>
    <para>
    </para>

    <sect2>
      <title>Definición de un puntero a función</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Declaraciones y definiciones complicadas</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Uso de un puntero a función</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Arrays de punteros a funciones</title>
      <para>
      </para>
    </sect2>
  </sect1>


  <sect1>
    <title>Make: cómo hacer compilación separada</title>
    <para>
    </para>

    <sect2>
      <title>Las actividades de Make</title>
      <para>
      </para>

      <sect3>
	<title>Macros</title>
	<para>
	</para>
      </sect3>


      <sect3>
	<title>Reglas de sufijo</title>
	<para>
	</para>
      </sect3>

      <sect3>
	<title>Objetivos por defecto</title>
	<para>
	</para>
      </sect3>
    </sect2>

    <sect2>
      <title>Los Makefiles de este libro</title>
      <para>
      </para>
    </sect2>

    <sect2>
      <title>Un ejemplo de Makefile</title>
      <para>
      </para>
    </sect2>
  </sect1>

  <sect1>
    <title>Resumen</title>
    <para>
    </para>
  </sect1>

  <sect1>
    <title>Ejercicios</title>
    <para>
    </para>
  </sect1>
</chapter>


<!-- Local Variables: -->
<!-- sgml-parent-document:"PensarEnC++.sgml" -->
<!-- End: -->
